{
  "cells": [
    {
      "metadata": {
        "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
        "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
        "trusted": true
      },
      "cell_type": "code",
      "source": "import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"../input\"))\nfrom statsmodels.formula.api import ols\nimport matplotlib.pyplot as plt\n% matplotlib inline",
      "execution_count": 35,
      "outputs": []
    },
    {
      "metadata": {
        "collapsed": true,
        "_uuid": "d629ff2d2480ee46fbb7e2d37f6b5fab8052498a",
        "_cell_guid": "79c7e3d0-c299-4dcb-8224-4455121ee9b0",
        "trusted": true
      },
      "cell_type": "code",
      "source": "madata = pd.read_csv(\"../input/MAdata.csv\")",
      "execution_count": 5,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "420d292359e893e1ac373765ff248a0b50cf883d"
      },
      "cell_type": "code",
      "source": "madata",
      "execution_count": 6,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9ea99928f32a58f4be06c4b1ede7e3c457cc790d"
      },
      "cell_type": "code",
      "source": "from sklearn.linear_model import LinearRegression\ndf = madata.drop(\"State\", axis=1)\nX = df.drop(\"Death_Rate\", axis = 1)\nlm = LinearRegression()\nlm.fit(X, madata.Death_Rate)",
      "execution_count": 11,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "41f59894906d1c61fe5021bcef518ea026480b61"
      },
      "cell_type": "code",
      "source": "print(\"Estimated Intercept is\", lm.intercept_)",
      "execution_count": 12,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "6f2be172c88b5f01389f633797e3994e780ec77e"
      },
      "cell_type": "code",
      "source": "print(\"The number of coefficients in this model are\", lm.coef_)",
      "execution_count": 13,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "a668bd8e1a9f2bf355f1c9b04ad9108519cc4632"
      },
      "cell_type": "code",
      "source": "coef = zip(X.columns, lm.coef_)\ncoef_df = pd.DataFrame(list(zip(X.columns, lm.coef_)), columns=['features', 'coefficients'])\ncoef_df",
      "execution_count": 14,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "250aa909f650f7504c6b4d1aef79573ac1135e06"
      },
      "cell_type": "code",
      "source": "lm.predict(X)[0:17]",
      "execution_count": 31,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "465a62c3f7308e1cdecb19c6271a23cb433be9b7"
      },
      "cell_type": "code",
      "source": "import plotly.plotly as py \nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)",
      "execution_count": 28,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "eb6df6b8237fbd024844f1fb2ac53258e8d96c9b"
      },
      "cell_type": "code",
      "source": "plt.scatter(df.Year, df.Death_Rate)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Death Rate with Age Adjusted\")\nplt.title(\"Relationship between Year and Death Rate in the State of Massachusetts\")",
      "execution_count": 38,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "5fb60ed121bc29ca62d66e704e518afe8d5f0779"
      },
      "cell_type": "code",
      "source": "trace = go.Scatter(\n    x =lm.predict(X),\n    y = df.Death_Rate,\n    mode = 'markers'\n)\ndata = [trace]\nlayout = go.Layout(\n    title='Death Rate vs. Predicted Death Rate',\n    xaxis=dict(\n        title='Predicted Death Rate',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#7f7f7f'\n        )\n    ),\n    yaxis=dict(\n        title='Predicted Death Rate',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#7f7f7f'\n        )\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)",
      "execution_count": 43,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "d8b9fda712d20f10c5755d67163f97539342ca79"
      },
      "cell_type": "code",
      "source": "mse = np.mean((df.Death_Rate - lm.predict(X))**2)\nprint(mse)",
      "execution_count": 45,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "collapsed": true,
        "_uuid": "7ce5977b6adf32b8d290a9431a012f927dc58c55"
      },
      "cell_type": "code",
      "source": "",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.5",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 1
}
